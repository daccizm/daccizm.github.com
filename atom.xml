<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Decimal Blue Note]]></title>
  <link href="http://fukuishere.github.com/atom.xml" rel="self"/>
  <link href="http://fukuishere.github.com/"/>
  <updated>2013-03-23T21:32:30+09:00</updated>
  <id>http://fukuishere.github.com/</id>
  <author>
    <name><![CDATA[fukuishhere]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Datetime,ActiveSupport::TimeWithZoneクラスの拡張]]></title>
    <link href="http://fukuishere.github.com/blog/2013/03/23/meta-datetime-ext/"/>
    <updated>2013-03-23T18:45:00+09:00</updated>
    <id>http://fukuishere.github.com/blog/2013/03/23/meta-datetime-ext</id>
    <content type="html"><![CDATA[<ul>
<li>やりたいこと。<br/>
「モデルをcreateした作成日がいつか判定したい」</li>
</ul>


<p>例えば、こんな感じ。</p>

<blockquote><p>entry.created_at.this_year?</p></blockquote>

<p>めちゃくちゃハマったorz<br/>
Datetimeを再オープンしてRspecも問題なく動作して問題なし！！<br/>
でも、、、Rails consoleでundefind methodで怒られる。。</p>

<ul>
<li>結論<br/>
「Datetimeの拡張ではない、ActiveSupport::TimeWithZoneの拡張が必要！！」</li>
</ul>


<p>created_atのクラスをrails consoleで確認。</p>

<pre><code>irb(main):001:0* Entry.create(:user_id=&gt;1, :title=&gt;"title", :content=&gt;"content").created_at.class
=&gt; ActiveSupport::TimeWithZone
</code></pre>

<p>ということで、拡張用のモジュールを作成。</p>

<figure class='code'><figcaption><span>lib/class_ext.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">module</span> <span class="nn">DateTimeExt</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">this_year?</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">year</span> <span class="o">==</span> <span class="no">Date</span><span class="o">.</span><span class="n">today</span><span class="o">.</span><span class="n">year</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>そして、libs.rbを作成してMix-in。<br/>
（名前は特になんでもOK）</p>

<figure class='code'><figcaption><span>config/initializers/libs.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="nb">require</span> <span class="s1">&#39;core_ext&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="ss">ActiveSupport</span><span class="p">:</span><span class="ss">:TimeWithZone</span><span class="o">.</span><span class="n">class_eval</span> <span class="k">do</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">DateTimeExt</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>rails consoleで確認。</p>

<pre><code>irb(main):002:0&gt; Entry.create(:user_id=&gt;1, :title=&gt;"title", :content=&gt;"content").created_at.this_year?
=&gt; true
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[classに自前のattrメソッドを追加する]]></title>
    <link href="http://fukuishere.github.com/blog/2013/03/23/meta-class-ext/"/>
    <updated>2013-03-23T18:16:00+09:00</updated>
    <id>http://fukuishere.github.com/blog/2013/03/23/meta-class-ext</id>
    <content type="html"><![CDATA[<p>以下をTryしてみました。<br/>
1.  自前でattr_sanmpleのように定義<br/>
2.  指定された属性の名前で動的にメソッド生成</p>

<figure class='code'><figcaption><span>entry.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Entry</span> <span class="o">&lt;</span> <span class="ss">ActiveRecord</span><span class="p">:</span><span class="ss">:Base</span>
</span><span class='line'>  <span class="n">attr_sample</span> <span class="ss">:created_at</span>
</span></code></pre></td></tr></table></div></figure>


<p>Classクラスをオープンしてメソッドを定義。（本当はModuleの方が正しいのかな？）</p>

<figure class='code'><figcaption><span>lib/class_ext.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Class</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">attr_sample</span><span class="p">(</span><span class="o">*</span><span class="n">attrs</span><span class="p">)</span>
</span><span class='line'>    <span class="n">attrs</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="kp">attr</span><span class="o">|</span>
</span><span class='line'>    <span class="nb">self</span><span class="o">.</span><span class="n">class_eval</span> <span class="sx">%Q{</span>
</span><span class='line'><span class="sx">        define_method(&quot;</span><span class="si">#{</span><span class="kp">attr</span><span class="si">}</span><span class="sx">_this_year?&quot;) do</span>
</span><span class='line'><span class="sx">          </span><span class="si">#{</span><span class="kp">attr</span><span class="si">}</span><span class="sx">.year == Date.today.year</span>
</span><span class='line'><span class="sx">        end</span>
</span><span class='line'><span class="sx">      }</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>これでこんな感じに使えたりする。</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="no">Entry</span><span class="o">.</span><span class="n">new</span><span class="o">.</span><span class="n">created_at_this_year?</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby環境のgemをuninstall]]></title>
    <link href="http://fukuishere.github.com/blog/2013/03/23/gem-unistall/"/>
    <updated>2013-03-23T16:06:00+09:00</updated>
    <id>http://fukuishere.github.com/blog/2013/03/23/gem-unistall</id>
    <content type="html"><![CDATA[<p>Ruby環境に不要なgemを削除したい。<br/>
そんな時の手順です。<br/>
基本的にはbundlerがあれば十分なのでそれ以外は入れないようにしたいですね。</p>

<p>初めのうちにやってしまう、うっかりミス。</p>

<pre><code>$bundle exec rails new example
</code></pre>

<p>&#8211;skip-bundleが抜けている。。。
そのためにRuby環境にgemがinstallされてしまうorz<br/>
やっぱりこうしときたいですね。</p>

<pre><code>$bundle exec rails new example --skip-bundle  
</code></pre>

<p>本題のRuby環境（rbenv環境）のgemのuninstallはコレ。</p>

<pre><code>$rbenv exec gem list | awk '{print "rbenv exec gem uninstall " $1}' | sh -xv
</code></pre>

<p>そしてbundlerのみ再インストール。</p>

<pre><code>$rbenv exec gem install bundler
$rbenv rehash
</code></pre>

<p>gemの確認</p>

<pre><code>$rbenv exec gem list
</code></pre>

<hr />

<p>参考サイト
<a href="http://qiita.com/items/a60886152a4c99ce1017">http://qiita.com/items/a60886152a4c99ce1017</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rbenv環境でgemのupdateしてみた]]></title>
    <link href="http://fukuishere.github.com/blog/2013/03/23/gem-update/"/>
    <updated>2013-03-23T15:26:00+09:00</updated>
    <id>http://fukuishere.github.com/blog/2013/03/23/gem-update</id>
    <content type="html"><![CDATA[<p>Railsのバージョンアップのついでにgemも最新化してみることに。</p>

<p>以下、サイトを参考にしました。
<a href="http://nemoplus.hateblo.jp/entry/2013/01/11/042307">http://nemoplus.hateblo.jp/entry/2013/01/11/042307</a></p>

<p>gemのバージョンを確認</p>

<pre><code>VirtualBox:~$ gem -v
1.8.23
</code></pre>

<p>gemのupdate</p>

<pre><code>VirtualBox:~$ rbenv exec gem update --system
Updating rubygems-update
Fetching: rubygems-update-2.0.3.gem (100%)
Successfully installed rubygems-update-2.0.3
Installing RubyGems 2.0.3
RubyGems 2.0.3 installed
......
</code></pre>

<p>忘れずに</p>

<pre><code>VirtualBox:~$ rbenv rehash
</code></pre>

<p>無事に最新化成功</p>

<pre><code>VirtualBox:~$ gem -v
2.0.3
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[octopress + Github でブログを作ってみた]]></title>
    <link href="http://fukuishere.github.com/blog/2013/03/23/install-octopress/"/>
    <updated>2013-03-23T10:40:00+09:00</updated>
    <id>http://fukuishere.github.com/blog/2013/03/23/install-octopress</id>
    <content type="html"><![CDATA[<p>「GithubでBlog」という直感的好奇心から早速トライしてみることに。</p>

<p>導入難易度は<strong>Easy</strong>です。
しかし、ハマった点がいくつか。</p>

<ul>
<li>Githubのメールアドレスを確認していなかった</li>
<li>Githubへの公開鍵登録</li>
</ul>


<p>初歩的なハマりでしたorz</p>

<p>以下、サイトを参考にしました。</p>

<blockquote><p><a href="http://blog.glidenote.com/blog/2011/11/07/install-octopress-on-github/">GithubとOctopressでモダンな技術系ブログを作ってみる</a><br/>
<a href="http://www.sankitch.me/blog/2012/05/05/build-octopress-on-github-dropbox/">Octopress + Github Pages + Dropbox でブログを構築</a><br/>
まだ試してないけど役立ちそうなサイト<br/>
<a href="http://k-mats.github.com/blog/2013/03/04/blog-on-gibhub-2/">デザインや画像について</a><br/>
<a href="http://tokkonopapa.github.com/blog/2011/12/30/octopress-on-github-and-bitbucket/">運用管理について</a><br/>
<a href="http://www.miukoba.net/blog/2013/01/05/start-octopress/">テーマの変更、faviconの変更、コメント欄の追加</a></p></blockquote>

<hr />

<p>上記サイトと若干異なる点は、（恐らくただ省略されただけだが）<br/>
gemのインストールはvendor/bundleにインスコ。</p>

<pre><code>bundle install --path vendor/bundle
</code></pre>

<p>ということでrakeを実行するときは</p>

<pre><code>bundle exec rake setup_github_pages
bundle exec rake generate
bundle exec rake deploy
</code></pre>

<hr />

<p>新規記事の投稿</p>

<pre><code>bundle exec rake new_post["new blog"]
</code></pre>

<p>markdown拡張子のファイルが以下に生成</p>

<pre><code>source/_posts/2013-03-23-new-blog.markdown
</code></pre>

<p>ファイルを編集</p>

<pre><code>---
layout: post
title: "new blog"
date: 2013-03-23 10:17
comments: true
categories:
---
投稿する内容を書く
</code></pre>

<p>記事を書いたら後はデプロイ</p>

<pre><code>bundle exec rake gen_deploy
</code></pre>

<hr />

<p>一応ハマった点について述べておく。</p>

<ul>
<li>Githubのメールアドレスを確認していなかった</li>
</ul>


<p>経緯問題が起きたときから解決まではこうだ。<br/>
1.  参考サイトのとおりにデプロイまで実行<br/>
2.  目安の１０分過ぎてもブログページがずっと４０４<br/>
3.  Githubに登録しているメールを確認</p>

<blockquote><p>The page build failed with the following error:</p>

<p>You need a verified email address in your GitHub account to publish Pages.<br/>
You can verify your email addresses from your Settings panel:</p>

<p>   <a href="https://github.com/settings/emails">https://github.com/settings/emails</a></p>

<p>For information on troubleshooting Jekyll see <a href="https://help.github.com/articles/using-jekyll-with-pages#troubleshooting">https://help.github.com/articles/using-jekyll-with-pages#troubleshooting</a><br/>
If you have any questions please contact GitHub Support.</p>

<p>support@github.com<br/>
https://github.com/contact</p></blockquote>

<p><strong>GithubPageを利用するときは登録済みメールアドレスを確認しておく必要があった！！</strong><br/>
4.  Githubに登録しているメールを確認<br/>
5.  再度デプロイして正常にブログが表示されたことを確認</p>

<ul>
<li>Githubへの公開鍵登録</li>
</ul>


<p>sshでgit pushするときにエラーが出たので対処<br/>
公開鍵を確認</p>

<pre><code>cat ~/.ssh/id_rsa.pub
</code></pre>

<p><a href="https://github.com/settings/ssh">https://github.com/settings/ssh</a>
から公開鍵を登録<br/>
Title: (任意)<br/>
Key: (example)ssh-rsa AA&#8230;.</p>
]]></content>
  </entry>
  
</feed>
